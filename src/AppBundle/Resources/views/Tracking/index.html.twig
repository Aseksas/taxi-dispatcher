{% extends "::base.html.twig" %}

{% block title %}{{ "Tracking"|trans }}{% endblock %}

{% block body %}
    <div class="display-info-window hidden">
        <div class="close">x</div>
        <div class="content"></div>
    </div>
    <button data-toggle="modal" data-backdrop="static" data-keyboard="false" data-target="#new-order" class="btn btn-large btn-success pull-right new-order">{{ "New order"|trans }}</button>
    <div id="map"><span class="loading">{{ "Loading map..."|trans }}</span></div>

    <div class="modal fade" id="new-order" tabindex="-1" role="dialog">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">{{ "New order"|trans }}</h4>
                </div>
                <div class="modal-body"></div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" id="new-order-close" data-dismiss="modal">{{ "Close"|trans }}</button>
                    <button type="button" class="btn btn-primary btn-success btn-submit-order">{{ "Create"|trans }}</button>
                </div>
            </div>
        </div>
    </div>

{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <style type="text/css">

        .display-info-window {
            position: fixed;
            top:70px;
            width:400px;
            left:20px;
            z-index: 10;
            background: #ffffff;
            padding: 10px;
            box-shadow: 4px 2px 6px #ccc;
        }

        body.modal-open .modal {
            display: flex !important;
            align-items: center;
        }

        .new-order {
            position: fixed;
            right: 20px;
            z-index: 10;
            top:70px;
        }
        .navbar {
            margin-bottom: 0px !important;
        }
        #map {
            height: 400px;
            width: 100%;
        }
    </style>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript">

        var map = null;
        var markerCollection = [];
        var polyline = null;

        $(document).ready(function () {

           $('#map').css('height', (window.innerHeight - 42) + 'px');

            $('#new-order').on('show.bs.modal', function (e) {
                $.get("{{ path('tracking_order') }}", function(response){
                    $('#new-order .modal-body').html(response);
                });
            });

            $('.display-info-window .close').click(function(){
               content(null);
            });

            $('.btn-submit-order').click(function() {
                var modalForm = $('#new-order form');
                $.post("{{ path('tracking_order') }}", modalForm.find('input, select, textarea').serialize(), function(response){

                    if(typeof response.success !== "undefined" && response.success) {
                        $('#new-order-close').trigger('click');
                        toastr.success("{{ "Order successful created"|trans }}");
                    } else {
                        $('#new-order .modal-body').html(response);
                    }

                });
            });

        });

        $(document).on('click', '.order-action', function () {

            if(confirm("{{ "Ar you sure you what to make this action?"|trans }}")) {
                $.post("{{ path('tracking_order_status') }}", {
                    "status": $(this).data("status"),
                    "id": $(this).data("id")
                }, function (rsp) {
                    if (rsp.success) {
                        toastr.success("{{ "Status successfully updated"|trans }}");
                    } else if (typeof rsp.message !== "undefined") {
                        toastr.error(rsp.message);
                    } else {
                        toastr.error("{{ "Server error please try again"|trans }}");
                    }
                    content(null);
                });
            }
        });

        function initMap() {

            var defaultParam = {mapTypeControl: false, fullscreenControl: false, streetViewControl: false,
            styles: [
                {
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#f5f5f5"
                        }
                    ]
                },
                {
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#616161"
                        }
                    ]
                },
                {
                    "elementType": "labels.text.stroke",
                    "stylers": [
                        {
                            "color": "#f5f5f5"
                        }
                    ]
                },
                {
                    "featureType": "administrative.land_parcel",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#bdbdbd"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#eeeeee"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#757575"
                        }
                    ]
                },
                {
                    "featureType": "poi.business",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#e5e5e5"
                        }
                    ]
                },
                {
                    "featureType": "poi.park",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#ffffff"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "road.arterial",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#757575"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#dadada"
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#616161"
                        }
                    ]
                },
                {
                    "featureType": "road.local",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "transit.line",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#e5e5e5"
                        }
                    ]
                },
                {
                    "featureType": "transit.station",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#eeeeee"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "geometry",
                    "stylers": [
                        {
                            "color": "#c9c9c9"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#9e9e9e"
                        }
                    ]
                }
            ]};

            {% if availableDriverCollection|length == 0 %}
                defaultParam.zoom = 2;
                defaultParam.center = {lat: 18, lng:  20 };

            {% elseif(availableDriverCollection|length == 1) %}
                {% set driver = availableDriverCollection|first %}
                defaultParam.zoom = 12;
                defaultParam.center = {lat: {{ driver.latitude }}, lng: {{ driver.longitude }} };
            {% endif %}

            map = new google.maps.Map(document.getElementById('map'), defaultParam);

            {% if(availableDriverCollection|length >= 2 or activeOrderCollection > 0)  %}
                var bounds = new google.maps.LatLngBounds();

                {% for item in availableDriverCollection %}
                    bounds.extend(new google.maps.LatLng({{ item.latitude }},{{ item.longitude }}));
                {% endfor %}

                {% for item in activeOrderCollection %}
                        bounds.extend(new google.maps.LatLng({{ item.pickupLatitude }},{{ item.pickupLongitude }}));
                        bounds.extend(new google.maps.LatLng({{ item.destinationLatitude }},{{ item.destinationLongitude }}));
                {% endfor %}

                map.fitBounds(bounds);
            {% endif %}

            {% for item in activeOrderCollection %}

                {% if item.status == 'assigned'  %}

                    marker = new google.maps.Marker({
                        position: new google.maps.LatLng({{ item.pickupLatitude }},{{ item.pickupLongitude }}),
                        map: map,
                        title: "{{ "Client position:"|trans }} {{ item.name }}",
                        icon: '{{ asset('bundles/app/image/client_position.png') }}'
                    });
                    marker.addListener('click', function() {
                        handleClick("order", {{ item.id }}, marker)
                    });

                {% endif %}

                marker = new google.maps.Marker({
                    position: new google.maps.LatLng({{ item.destinationLatitude }},{{ item.destinationLongitude }}),
                    map: map,
                    title: "{{ "Client destination:"|trans }} {{ item.name }}",
                    icon: '{{ asset('bundles/app/image/client_destination.png') }}'
                });
                marker.addListener('click', function() {
                    handleClick("order", {{ item.id }}, marker)
                });
                markerCollection.push(marker);
            {% endfor %}

            {% for item in  availableDriverCollection %}
                {% set image = 'bundles/app/image/car_available.png' %}
                {% if item.orderCount > 0 %}{% set image = 'bundles/app/image/car_not_available.png' %}{% endif %}
                marker = new google.maps.Marker({
                    position: new google.maps.LatLng({{ item.latitude }},{{ item.longitude }}),
                    map: map,
                    title: "{{ item.name }}",
                    icon: '{{ asset(image) }}'
                });

                marker.addListener('click', function() {
                    handleClick("driver", {{ item.id }})
                });
                markerCollection.push(marker);
            {% endfor %}

        }

        function handleClick(type, id, marker) {

            $.post('{{ path('tracking_track') }}', {'type' : type, 'id' : id}, function (rsp) {

                if(rsp.success) {

                    if(typeof rsp.center !== "undefined") {
                        map.panTo( new google.maps.LatLng(rsp.center.lat, rsp.center.lng));
                    }

                    if(typeof rsp.route !== "undefined" && rsp.route.length >= 1) {
                        renderRoute(rsp.route);
                    }

                    if(typeof rsp.content !== "undefined") {
                        content(rsp.content)
                    }

                } else {
                    toastr.error(rsp.message);
                }

            });

        }

        function renderRoute(route) {
            var directionsService = new google.maps.DirectionsService();

            var startPoint = new google.maps.LatLng(route[0].lat, route[0].lng);
            var finishPoint = new google.maps.LatLng(route[route.length-1].lat, route[route.length-1].lng);

            var wayPointCollection = [];

            if(route.length >= 3) {
                for(i = 1; i<route.length-1;i++) {
                    wayPointCollection.push({stopover: true, location: new google.maps.LatLng(route[i].lat, route[i].lng)});
                }
            }
            var params = {
                origin: startPoint,
                destination: finishPoint,
                waypoints: wayPointCollection,
                travelMode: google.maps.TravelMode.DRIVING
            };

            directionsService.route(params, function(response, status) {
                if (status === google.maps.DirectionsStatus.OK) {
                    if(polyline !== null) {
                        polyline.setMap(null);
                    }

                    polyline = new google.maps.Polyline({
                        path: [],
                        strokeColor: '#0000FF',
                        strokeWeight: 3
                    });

                    var legs = response.routes[0].legs;
                    for (i = 0; i < legs.length; i++) {
                        var steps = legs[i].steps;
                        for (j = 0; j < steps.length; j++) {
                            var nextSegment = steps[j].path;
                            for (k = 0; k < nextSegment.length; k++) {
                                polyline.getPath().push(nextSegment[k]);
                            }
                        }
                    }

                    polyline.setMap(map);
                } else {
                    toastr.error('Directions request failed due to ' + status);
                }
            });
        }

        function content(content){
            if(content === null) {
                if(polyline !== null) {
                    polyline.setMap(null);
                }
                $('.display-info-window').addClass('hidden').find('.content').html('');
            } else {
                $('.display-info-window').removeClass('hidden').find('.content').html(content);
            }

        }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?callback=initMap&libraries=places&key={{ MAP_API_KEY }}">
{% endblock %}